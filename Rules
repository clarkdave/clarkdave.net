#!/usr/bin/env ruby
#
# A few helpful tips about the Rules file:
#
# * The string given to #compile and #route are matching patterns for
#   identifiers--not for paths. Therefore, you can't match on extension.
#
# * The order of rules is important: for each item, only the first matching
#   rule is applied.
#
# * Item identifiers start and end with a slash (e.g. "/about/" for the file
#   "content/about.html"). To select all children, grandchildren, of an
#   item, use the pattern "/about/*/"; "/about/*" will also select the parent,
#   because "*" matches zero or more characters.

haml_opts = {
  :ugly => false,
  :remove_whitespace => false,
}

preprocess do
  items.each do |item|
    if item[:filename] =~ %r{/assets/(stylesheets|javascripts)}

    end
  end
end

compile %r{/assets/(stylesheets|javascripts)/.+/} do
  filter :sprockets
    # :css_compressor => :scss,
    # :js_compressor => :uglifier
end

compile '/' do
  filter :haml, haml_opts
  layout 'default'
end

compile '/posts/*' do
  filter :redcarpet
  filter :colorize_syntax, :default_colorizer => :rouge
  layout 'post'
end

compile '/portfolio/*' do
  filter :redcarpet
  layout 'portfolio'
end

compile '*' do
  unless item.binary?
    filter :haml, haml_opts
    layout 'default'
  end
end

route '/assets/*/' do
  # p item
  path = Nanoc::Sprockets::Helper.asset_path(item)
  # p path
  # path
end

# route posts to /year/month/slug/index.html
route '/posts/*' do
  y, m, _, slug = /([0-9]+)\-([0-9]+)\-([0-9]+)\-([^\/]+)/.match(item.identifier).captures
  "/#{y}/#{m}/#{slug}/index.html"
end

route '/portfolio/*' do
  y, _, _, slug = /([0-9]+)\-([0-9]+)\-([0-9]+)\-([^\/]+)/.match(item.identifier).captures
  "/work/#{y}/#{slug}/index.html"
end

route '*' do
  if item.binary?
    # Write item with identifier /foo/ to /foo.ext
    item.identifier.chop + '.' + item[:extension]
  else
    # Write item with identifier /foo/ to /foo/index.html
    item.identifier + 'index.html'
  end
end

layout '*', :haml, haml_opts
